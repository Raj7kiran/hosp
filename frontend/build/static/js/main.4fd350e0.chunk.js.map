{"version":3,"sources":["constants/userConstants.js","constants/adminConstants.js","store.js","reducers/userReducers.js","reducers/adminReducers.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Loader.js","components/Message.js","screens/LocationScreen.js","actions/adminActions.js","components/FormContainer.js","screens/LoginScreen.js","components/AddUser.js","screens/AddUsersScreen.js","screens/AdminAddUsersScreen.js","users.js","screens/ClientScreen.js","screens/ProfileScreen.js","screens/UpdateProfileScreen.js","screens/AddLocationScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","LOCATION_DETAILS_REQUEST","LOCATION_DETAILS_SUCCESS","LOCATION_DETAILS_FAIL","LOCATION_CREATE_REQUEST","LOCATION_CREATE_SUCCESS","LOCATION_CREATE_FAIL","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userDetails","user","locationDetails","locations","locationCreate","success","location","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","dispatch","useDispatch","useSelector","logoutHandler","removeItem","document","href","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","id","Nav","className","isAdmin","NavDropdown","title","name","Item","onClick","Footer","Row","Col","Loader","Spinner","animation","role","style","width","height","margin","display","Message","children","Alert","defaultProps","LocationScreen","useEffect","a","axios","get","data","console","log","message","response","Table","striped","bordered","hover","responsive","map","country","city","FormContainer","xs","md","LoginScreen","history","useState","email","setEmail","password","setPassword","push","Form","onSubmit","e","preventDefault","config","headers","post","setItem","stringify","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","AddUser","admin","InputGroup","Checkbox","FormControl","AddUsersScreen","AdminAddUsersScreen","users","passowrd","ClientScreen","ProfileScreen","setName","confirmPassword","setConfirmPassword","setMessage","getState","UpdateProfileScreen","AddLocation","setCountry","setCity","stat","setStat","App","path","component","exact","AddLocationScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4fd350e0.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'","export const LOCATION_DETAILS_REQUEST = 'LOCATION_DETAILS_REQUEST'\r\nexport const LOCATION_DETAILS_SUCCESS = 'LOCATION_DETAILS_SUCCESS'\r\nexport const LOCATION_DETAILS_FAIL = 'LOCATION_DETAILS_FAIL'\r\n\r\nexport const LOCATION_CREATE_REQUEST = 'LOCATION_CREATE_REQUEST'\r\nexport const LOCATION_CREATE_SUCCESS = 'LOCATION_CREATE_SUCCESS'\r\nexport const LOCATION_CREATE_FAIL = 'LOCATION_CREATE_FAIL'\r\nexport const LOCATION_CREATE_RESET = 'LOCATION_CREATE_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { userLoginReducer, userDetailsReducer } from './reducers/userReducers'\r\nimport { locationListReducer, locationCreateReducer } from './reducers/adminReducers'\r\n\r\nconst reducer = combineReducers({\r\n\tuserLogin: userLoginReducer,\r\n\tuserDetails: userDetailsReducer,\r\n\tlocationDetails: locationListReducer,\r\n\tlocationCreate: locationCreateReducer\r\n})\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n\t\t\t\t\t\t\t ? JSON.parse(localStorage.getItem('userInfo'))\r\n\t\t\t\t\t\t\t : null\r\n\r\nconst initialState = {\r\n\tuserLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\nconst store = createStore(\r\n\treducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n\t)\r\n\r\n\r\nexport default store","import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT,\r\n\t\t USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_RESET,\r\n\t\t} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = ( state ={}, action ) => {\r\n\tswitch(action.type){\r\n\t\tcase USER_LOGIN_REQUEST:\r\n\t\t\treturn { loading: true }\r\n\t\tcase USER_LOGIN_SUCCESS:\r\n\t\t\treturn { loading: false, userInfo: action.payload }\r\n\t\tcase USER_LOGIN_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\t\tcase USER_LOGOUT:\r\n\t\t\treturn {}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport const userDetailsReducer = ( state={ user: {} }, action ) => {\r\n\tswitch(action.type){\r\n\t\tcase USER_DETAILS_REQUEST : \r\n\t\t\treturn { ...state, loading: true}\r\n\t\tcase USER_DETAILS_SUCCESS:\r\n\t\t\treturn { loading: false, user: action.payload }\r\n\t\tcase USER_DETAILS_FAIL:\r\n\t\t\treturn { loading: false, error: action.payload }\r\n\t\tcase USER_DETAILS_RESET:\r\n\t\t\treturn { user:{} }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { LOCATION_DETAILS_REQUEST ,LOCATION_DETAILS_SUCCESS ,LOCATION_DETAILS_FAIL,\r\n\t\t LOCATION_CREATE_REQUEST ,LOCATION_CREATE_SUCCESS ,LOCATION_CREATE_FAIL\r\n\t\t } from '../constants/adminConstants'\r\n\r\n\r\n//location listing\r\nexport const locationListReducer = (state={ locations:[] }, action) => {\r\n\tswitch(action.type){\r\n\t\tcase LOCATION_DETAILS_REQUEST:\r\n\t\t\treturn { loading: true, locations:[] }\r\n\t\tcase LOCATION_DETAILS_SUCCESS:\r\n\t\t \treturn { loading: false, locations: action.payload }\r\n\t\t case LOCATION_DETAILS_FAIL:\r\n\t\t \treturn { loading:false, error: action.payload }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\n//create location\r\nexport const locationCreateReducer = (state={}, action) => {\r\n\tswitch(action.type){\r\n\tcase LOCATION_CREATE_REQUEST:\r\n\t\treturn { loading: true }\r\n\tcase LOCATION_CREATE_SUCCESS:\r\n\t \treturn { loading: false, success: true, location: action.payload }\r\n\t case LOCATION_CREATE_FAIL:\r\n\t \treturn { loading: false, error: action.payload }\r\n\t default:\r\n\t \treturn state\r\n\r\n\t}\r\n}\r\n","import React from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n  \r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Name</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n           <Nav className='ml-auto'>\r\n              { userInfo && !userInfo.isAdmin ? (\r\n                  <NavDropdown title={userInfo.name} id='username'>\r\n                      <LinkContainer to='/profile'>\r\n                          <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                       <LinkContainer to='/addusers'>\r\n                            <NavDropdown.Item>Add Users</NavDropdown.Item>\r\n                      </LinkContainer>                     \r\n                      <LinkContainer to='/userlist'>\r\n                              <NavDropdown.Item>User List</NavDropdown.Item>\r\n                          </LinkContainer>\r\n                          <NavDropdown.Item onClick={logoutHandler} >\r\n                            Logout\r\n                          </NavDropdown.Item>                      \r\n                  </NavDropdown>\r\n                ) : userInfo && userInfo.isAdmin ? (\r\n                       <NavDropdown title={userInfo.name} id='username'>\r\n                          <LinkContainer to='/profile'>\r\n                              <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                          </LinkContainer>\r\n                          <LinkContainer to='/admin/clientlist'>\r\n                              <NavDropdown.Item>Clients</NavDropdown.Item>\r\n                          </LinkContainer>\r\n                          <LinkContainer to='/admin/master'>\r\n                              <NavDropdown.Item>Master</NavDropdown.Item>\r\n                          </LinkContainer>  \r\n                          <NavDropdown.Item onClick={logoutHandler} >\r\n                            Logout\r\n                          </NavDropdown.Item>                \r\n                      </NavDropdown>\r\n                ) : ('')  }   \r\n                {/*<LinkContainer to='/'>\r\n                    <Nav.Link>\r\n                      <i className='fas fa-user'></i> Login\r\n                    </Nav.Link>\r\n                  </LinkContainer> */}                      \r\n              \r\n                \r\n              \r\n                {/*{ userInfo && userInfo.isAdmin ? (\r\n                      <NavDropdown title='Admin Menu' id='adminmenu'>\r\n                        <LinkContainer to='/admin/clientlist'>\r\n                            <NavDropdown.Item>Clients</NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer to='/admin/master'>\r\n                            <NavDropdown.Item>Master</NavDropdown.Item>\r\n                        </LinkContainer>                  \r\n                      </NavDropdown>\r\n                  ) : ('') }*/}\r\n                \r\n             \r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import axios from 'axios'\r\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT,\r\n\t\t USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, \r\n\t\t} from '../constants/userConstants'\r\n\r\n\r\n\r\n\r\nexport const login = (email, password) => async(dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_REQUEST\r\n\t\t})\r\n\r\n\t\tconst config ={\r\n\t\t\t\theaders : {\t'Content-Type' : 'application/json'\t}\r\n\t\t\t}\r\n\r\n\t\tconst { data } = await axios.post('/users/login',{email, password}, config )\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t})\r\n\r\n\t\t//set user to local storage\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\t} catch(error){\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_FAIL,\r\n\t\t\tpayload: error.response && error.response.data.message\r\n\t\t\t\t\t ? error.response.data.message\r\n\t\t\t\t\t : error.message\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n\tlocalStorage.removeItem('userInfo')\r\n\tdispatch({ type: USER_LOGOUT })\r\n\tdocument.location.href='/'\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async(dispatch, getState) => {\r\n\ttry{\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_REQUEST\r\n\t\t})\r\n\r\n\t\tconst { userLogin: { userInfo } } = getState()\r\n\r\n\t\tconst { data } = await axios.get(`/users/${id}`)\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t})\r\n\r\n\t} catch(error) {\r\n\t\tconst message =\r\n\t      error.response && error.response.data.message\r\n\t        ? error.response.data.message\r\n\t        : error.message\r\n\t    dispatch({\r\n\t      type: USER_DETAILS_FAIL,\r\n\t      payload: message,\r\n\t  })\r\n\t}\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col className='text-center py-3'>Copyright &copy; Name</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</footer>\r\n\t\t)\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n\treturn(\r\n\t\t\t<Spinner\r\n\t\t\t\tanimation='border' role='status' \r\n\t\t\t\tstyle= {{width: '100px', height: '100px', margin:'auto', display:'block'}}\r\n\t\t\t>\r\n\t\t\t\t<span className='sr-only'>Loading...</span>\r\n\t\t\t</Spinner>\r\n\t\t)\r\n}\r\n\r\n\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\n\r\nconst Message = ({ variant, children }) => {\r\n\treturn(\r\n\t\t\t<Alert variant={variant}>{children}</Alert>\r\n\t\t)\r\n}\r\n\r\nMessage.defaultProps = {\r\n\tvariant: 'info'\r\n}\r\n\r\n\r\nexport default Message","import React, {  useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table,  Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listLocations } from '../actions/adminActions'\r\n\r\n\r\n\r\nconst LocationScreen = () => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst locationDetails = useSelector(state => state.locationDetails)\r\n\tconst { loading, error, locations } = locationDetails\r\n\t\r\n\tuseEffect(() => {\r\n\t\tdispatch(listLocations())\r\n\t},[dispatch])\r\n\r\n\t// const locations = []\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<Link to='/' className='btn btn-dark'>Go Back</Link>\r\n\t\t\t<Row className='align-items-center'>\r\n\t\t\t\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h1>Locations</h1>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className='text-right my-3'>\r\n\t\t\t\t\t<Link className='btn btn-dark' to='/admin/addlocation'>Add Location</Link>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{ loading ? (<Loader />)\r\n\t\t\t  : error ? (<Message variant='danger'>{error}</Message> )\r\n\t\t\t  : (\r\n\t\t\t  \t\t<Table striped bordered hover responsive className='table-sm'>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Country</th>\r\n\t\t\t\t\t\t\t\t<th>State</th>\r\n\t\t\t\t\t\t\t\t<th>City</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{locations.map(location => (\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>{location.country}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{location.state}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{location.city}</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t  \t) }\r\n\t\t\t\r\n\t\t</>\r\n\t\t)\r\n}\r\n\r\nexport default LocationScreen","import axios from 'axios'\r\nimport { LOCATION_DETAILS_REQUEST ,LOCATION_DETAILS_SUCCESS ,LOCATION_DETAILS_FAIL,\r\n\t\t LOCATION_CREATE_REQUEST ,LOCATION_CREATE_SUCCESS ,LOCATION_CREATE_FAIL\r\n\t\t } from '../constants/adminConstants'\r\n\r\n\r\nexport const listLocations = () => async(dispatch) => {\r\n\ttry{\r\n\t\tdispatch({ type: LOCATION_DETAILS_REQUEST })\r\n\r\n\t\tconst { data } = await axios.get('/admin/master')\r\n\r\n\t\tconsole.log(...data)\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: LOCATION_DETAILS_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t})\r\n\t} catch(error) {\r\n\t\tconst message =\r\n\t          error.response && error.response.data.message\r\n\t            ? error.response.data.message\r\n\t            : error.message\r\n\t        \r\n\t        dispatch({\r\n\t          type: LOCATION_DETAILS_FAIL,\r\n\t          payload: message,\r\n\t        })\r\n\t}\r\n}\r\n\r\n\r\nexport const createLocation = () =>  async(dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: LOCATION_CREATE_REQUEST })\r\n\r\n\t\tconst { userLogin: {userInfo}, } = getState()\r\n\r\n\t\tconst { data } = await axios.post('/admin/createlocation', {})\r\n\t\t\r\n\t\tdispatch({\r\n\t\t\ttype: LOCATION_CREATE_SUCCESS,\r\n\t\t\tpayload: data\r\n\t\t})\t\t\r\n\r\n\t} catch(error){\r\n\t\tconst message =\r\n\t      error.response && error.response.data.message\r\n\t        ? error.response.data.message\r\n\t        : error.message\r\n\t\t    \r\n\t\t    dispatch({\r\n\t\t      type: LOCATION_CREATE_FAIL,\r\n\t\t      payload: message,\r\n\t\t    })\r\n\t}\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\tconst [ email, setEmail ] = useState('')\r\n\tconst [ password, setPassword ] = useState('')\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin)\r\n\tconst { loading, error, userInfo } = userLogin\r\n\r\n\t//const redirect = location.search? location.search.split('=')[1] : '/'\r\n\r\n\tuseEffect(() => {\r\n\t\tif(userInfo){\r\n\t\t\thistory.push('/login')\r\n\t\t}\r\n\t},[history, userInfo])\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tdispatch(login(email, password))\r\n\t}\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t{loading && <Loader />}\r\n\t\t\t{userInfo ? ('')\r\n\t\t\t  : (\r\n\t\t\t\t\t<FormContainer>\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<h1>Login</h1>\t\t\t\r\n\t\t\t\t\t<Form onSubmit={submitHandler} className='py-3'>\r\n\t\t\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type= 'email'\r\n\t\t\t\t\t\t\t\t\t\t\t  placeholder='Enter email'\r\n\t\t\t\t\t\t\t\t\t\t\t  value = {email}\r\n\t\t\t\t\t\t\t\t\t\t\t  onChange = {(e) => setEmail(e.target.value)}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group controlId='password'>\r\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control \ttype= 'password'\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue = {password}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange = {(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t\r\n\t\t\t\t</FormContainer>\r\n\t\t\t\t\r\n\t\t  \t)}\r\n\t\t\r\n\t\t</>\r\n\t\t)\r\n}\r\n\r\n\r\nexport default LoginScreen","import React from 'react'\r\nimport { Form, Button, InputGroup, FormControl } from 'react-bootstrap'\r\n\r\n\r\nconst AddUser = ({ admin }) => {\r\n\treturn(\r\n\t\t<>\r\n\t\t<h1>Add User</h1>\r\n\t\t\t\t<Form >\r\n\t\t\t\t\t\t<Form.Group controlId='name'>\r\n\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type= 'text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control type= 'email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter mail'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t{admin == 1 && (\r\n\t\t\t\t\t\t\t<Form.Group controlId='iaAdmin'>\r\n\t\t\t\t\t\t\t\t<Form.Label>Is the user a Admin?</Form.Label>\r\n\t\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t    <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" />\r\n\t\t\t\t\t\t\t\t\t <FormControl aria-label=\"Text input with checkbox\" />\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t)}\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t</>\t\t\t\r\n\t\t)\r\n}\r\n\r\nexport default AddUser","import React from 'react'\r\nimport FormContainer from '../components/FormContainer'\r\nimport AddUser from '../components/AddUser'\r\n\r\n\r\n\r\nconst AddUsersScreen = () => {\r\n\treturn(\r\n\t\t<FormContainer  >\r\n\t\t\t<AddUser admin='0' />\r\n\t\t</FormContainer>\r\n\r\n\t\t)\r\n}\r\n\r\nexport default AddUsersScreen","import React from 'react'\r\nimport FormContainer from '../components/FormContainer'\r\nimport AddUser from '../components/AddUser'\r\n\r\n\r\n\r\nconst AdminAddUsersScreen = () => {\r\n\treturn(\r\n\t\t<FormContainer >\r\n\t\t\t<AddUser admin='1' />\r\n\t\t</FormContainer>\r\n\r\n\t\t)\r\n}\r\n\r\nexport default AdminAddUsersScreen","\r\nconst users = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tname: 'Admin',\r\n\t\temail: 'admin@abc.com',\r\n\t\tpassowrd: '123456',\r\n\t\tisAdmin: true\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tname: 'ClientAdmin',\r\n\t\temail: 'cladmin@abc.com',\r\n\t\tpassword: '123456',\r\n\t\tisAdmin: false\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tname: 'User1',\r\n\t\temail: 'user1@abc.com',\r\n\t\tpassword: '123456',\r\n\t\tisAdmin: false\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tname: 'User2',\r\n\t\temail: 'user2@abc.com',\r\n\t\tpassword: '123456',\r\n\t\tisAdmin: false\r\n\t}\r\n]\r\n\r\n\r\nexport default users","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table, Row, Col } from 'react-bootstrap'\r\nimport users from '../users'\r\n\r\n\r\nconst ClientScreen = () => {\r\n\treturn (\r\n\r\n\t\t<>\r\n\t\t\t<Row className='align-items-center'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h1>Client List</h1>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col className='text-right my-3'>\r\n\t\t\t\t\t<Link className='btn btn-dark' to='/admin/addusers'>Add User</Link>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Table striped bordered hover responsive className='table-sm'>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tusers.map((user) => (\r\n\t\t\t\t\t\tuser.isAdmin ? ' ' : (\r\n\t\t\t\t\t\t\t\t<tr key={user.id}>\r\n\t\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{user.email}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t</>\r\n\r\n\t\t)\r\n}\r\n\r\n\r\nexport default ClientScreen","import React, { useState, useEffect } from 'react'\r\nimport { Form,Button, Row, Col } from 'react-bootstrap'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails } from '../actions/userActions'\r\n\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n\tconst [ name, setName ] = useState('')\r\n\tconst [ email, setEmail ] = useState('')\r\n\tconst [ password, setPassword ] = useState('')\r\n\tconst [ confirmPassword, setConfirmPassword ] = useState('')\r\n\tconst [ message, setMessage ] = useState(null)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst userDetails = useSelector((state) => state.userDetails)\r\n\tconst { loading, error, user } = userDetails\r\n\t\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin)\r\n\tconst { userInfo } = userLogin\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!userInfo){\r\n\t\t\thistory.push('/')\r\n\t\t} else {\r\n\t\t\tif(!user || !user.name){\r\n\t\t\t\tdispatch(getUserDetails('profile'))\r\n\t\t\t} else {\r\n\t\t\t\tsetName(user.name)\r\n\t\t\t\tsetEmail(user.email)\r\n\t\t\t}\r\n\t\t}\r\n\t},[dispatch, history, userInfo, user])\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif(password !== confirmPassword){\r\n\t\t\tsetMessage('Passwords does not match')\r\n\t\t} else {\r\n\t\t\tconsole.log('Update Request')\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Profile</h1>\r\n\t\t\t{/*<Row className='align-items-center'>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h1>Profile</h1>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className='text-right my-3'>\r\n\t\t\t\t\t<Link className='btn btn-primary' to='/updateprofile'>Update Profile</Link>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>*/}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col md={6}>\r\n\t\t\t\t{error && <Message variant='danger'>{error}</Message>}\r\n\t\t\t\t{ loading ? (<Loader />)\r\n\t\t\t\t  : error ? (<Message variant='danger'>{error}</Message>)\r\n\t\t\t\t  : (\r\n\t\t\t\t  \t\t<Form onSubmit={submitHandler} >\r\n\t\t\t\t\t\t\t<Form.Group controlId='name'>\r\n\t\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type= 'name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {(e)=> setName(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group controlId='email'>\r\n\t\t\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type= 'email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter mail'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {(e)=> setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group controlId='password'>\r\n\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type= 'password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {(e)=> setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group controlId='confirmPassword'>\r\n\t\t\t\t\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type= 'password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Confirm password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {(e)=> setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t  \t)}\r\n\t\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t\t\t\r\n         </>\r\n\t\t)\r\n}\r\n\r\nexport default ProfileScreen","import React from 'react'\r\n\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\n\r\nconst UpdateProfileScreen = () => {\r\n\treturn(\r\n\t\t<FormContainer>\r\n\t\t\t<h1>Update Profile</h1>\r\n\t\t\t<Form>\r\n\t\t\t\t<Form.Group controlId='name'>\r\n\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type='text' placeholder='Enter Name'>\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t<Form.Label>Email Address</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control type= 'email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter mail'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Form.Label>Enter Password</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control type= 'password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter password'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t<Button>Update</Button>\r\n\t\t\t\t\r\n\t\t\t</Form>\r\n\t\t</FormContainer>\r\n\t\t)\r\n}\r\n\r\n\r\nexport default UpdateProfileScreen","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, InputGroup, FormControl } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Loader from '../components/Loader'\r\nimport { createLocation } from '../actions/adminActions'\r\n\r\n\r\nconst AddLocation = ({history}) => {\r\n\tconst [ country, setCountry ] = useState('')\r\n\tconst [ city, setCity ] = useState('')\r\n\tconst [ stat, setStat ] = useState('')\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst locationCreate = useSelector(state => state.locationCreate)\r\n\tconst { loading, error, success} = locationCreate\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(success){\r\n\t\t\thistory.push('/admin/master')\r\n\t\t} \r\n\t},[history, success])\r\n\r\n\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault()\r\n\t\tdispatch(createLocation({\r\n\t\t\tcountry,\r\n\t\t\tstat,\r\n\t\t\tcity\r\n\t\t}))\r\n\t}\r\n\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t<h1>Add Location</h1>\r\n\t\t\t<Link to='/admin/master' className='btn btn-dark my-3'>\r\n\t\t\t\t\tGo Back\r\n\t\t\t</Link>\r\n\t\t\t\t<Form onSubmit={submitHandler} >\r\n\t\t\t\t\t\t<Form.Group controlId='country'>\r\n\t\t\t\t\t\t\t<Form.Label>Country</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type= 'text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={country}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange = {(e) => setCountry(e.target.value) }\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group controlId='state'>\r\n\t\t\t\t\t\t\t<Form.Label>State</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type= 'text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter State'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={stat}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange = {(e) => setStat(e.target.value) }\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Form.Group controlId='city'>\r\n\t\t\t\t\t\t\t<Form.Label>City</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type= 'text'\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Enter City'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={city}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange = {(e) => setCity(e.target.value) }\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t\t<Button type='submit' variant='primary'>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t</>\t\t\t\r\n\t\t)\r\n}\r\n\r\nexport default AddLocation","import React from 'react'\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport LocationScreen from './screens/LocationScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport AddUsersScreen from './screens/AddUsersScreen'\nimport AdminAddUsersScreen from './screens/AdminAddUsersScreen'\nimport ClientScreen from './screens/ClientScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport UpdateProfileScreen from './screens/UpdateProfileScreen'\nimport AddLocationScreen from './screens/AddLocationScreen'\n\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n        <Header />\n            <main className='py-3'>\n                <Container>\n                    \n                    <Route path='/' component={LoginScreen} exact />\n                    <Route path='/addusers' component={AddUsersScreen} />\n                    <Route path='/profile' component={ProfileScreen} />                    \n                    <Route path='/admin/addusers' component={AdminAddUsersScreen} />\n                    <Route path='/admin/clientlist' component={ClientScreen} />  \n                    <Route path='/admin/master' component={LocationScreen} />\n                    <Route path='/admin/addlocation' component={AddLocationScreen} />\n                    <Route path='/updateprofile' component={UpdateProfileScreen} />  \n\n\n                \n                </Container>\n            </main>\n        <Footer />\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}